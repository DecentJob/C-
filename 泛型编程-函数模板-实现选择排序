
//交换的函数模板
template<class T>//class 可用typename代替
void mySwap(T&a, T&b)
{
	T temp = a;
	a = b;
	b = temp;
}
template<class T>
void mySort(T arr[], int len)
{
	for (int i = 0; i < len; i++)
	{
		int max = i;//认定最大值的下标
		int j = 0;
		for (j = i + 1; j < len; j++)
		{
			//认定最大值比遍历出的最大值要小，说明j下标的元素才是真正的最大值
			if (arr[max] < arr[j])
			{
				max = j;//更新最大值下标
			}
		}
		if (max != i)
		{
			//交换max和i元素
			mySwap(arr[max], arr[i]);
		}
	}
}
//打印的函数模板
template<class T>
void printArr(T arr[], int len)
{
	for (int i = 0; i < len; i++)
	{
		cout << arr[i] <<" " ;

	}
	cout << endl;
}


void test01()
{

	//测试char数组
	char charArr[] = "abcdef";

	int sz = sizeof(charArr) / sizeof(char);

	mySort(charArr, sz);

	printArr(charArr, sz);

}

void test02()
{
	//测试int数组
	int intArr[] = { 8,5,6,7,2,3,9,1,0,4 };

	int sz = sizeof(intArr) / sizeof(intArr[0]);

	mySort(intArr, sz);

	printArr(intArr, sz);

}


int main()
{
	test01();
	test02();
	return 0;
}
