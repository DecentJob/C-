#include <iostream>
#include <string>
#include <map>
class Person
{
public:
	Person(int age, string name)
	{
		this->m_Name = name;
		this->m_Age = age;
	}
	string m_Name;
	int m_Age;
};

class myCompare
{
public:
	bool operator()(const Person&p1, const Person&p2)
	/*bool operator()(int m_Age, string m_Name)*/
	{
		return p1.m_Age > p2.m_Age;
	}

};

void test01()
{
	//首先指定排序规则
	map<Person, Person, myCompare>m;

	Person p1(25, "张飞");
	Person p2(28 ,"关羽");
	Person p3(35, "刘备");

	m.insert(make_pair(p1.m_Age, p1.m_Name));
	m.insert(make_pair(p2.m_Age, p2.m_Name));
	m.insert(make_pair(p3.m_Age, p3.m_Name));

	for (map<Person,Person,myCompare>::iterator it = m.begin(); it != m.end(); it++)
	{
		cout << "key:" <<(*it).first.m_Age << "value:" << (*it).second.m_Name << endl;
	}
}

int main()
{
	test01();
	return 0;
}
